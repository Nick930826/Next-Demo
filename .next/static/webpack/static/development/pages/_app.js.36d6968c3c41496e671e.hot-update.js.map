{"version":3,"file":"static/webpack/static/development/pages/_app.js.36d6968c3c41496e671e.hot-update.js","sources":["webpack:///./with-redux.js"],"sourcesContent":["import React from 'react'\nimport createStore from './store'\n\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nconst getOrCreateStore = (initialState) => {\n  if (isServer) {\n    return createStore(initialState)\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = createStore(initialState)\n  }\n\n  return window[__NEXT_REDUX_STORE__]\n}\nexport default MyApp => {\n\n  class WithReduxApp extends React.Component {\n    constructor (props) {\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render () {\n      const { Component, pageProps, ...rest } = this.props\n      if (pageProps) {\n        pageProps.test = '123'\n      }\n  \n      return <MyApp Component={Component} pageProps={pageProps} {...rest} reduxStore={this.reduxStore} />\n    }\n  }\n\n  \n\n  WithReduxApp.getInitialProps = async (ctx) => {\n    const reduxStore = getOrCreateStore()\n    ctx.reduxStore = reduxStore\n    let appProps = {}\n    if (typeof MyApp.getInitialProps === 'function') {\n      appProps = await MyApp.getInitialProps(ctx)\n    }\n\n    return {\n      ...appProps,\n      initialReduxState: reduxStore.getState()\n    }\n  }\n\n  return WithReduxApp\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAPA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAfA;AACA;AADA;AAAA;AACA;AAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAKA;AACA;AANA;AAAA;AAUA;AAVA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAaA;AACA;;;;A","sourceRoot":""}