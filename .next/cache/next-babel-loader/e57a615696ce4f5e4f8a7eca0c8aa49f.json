{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cxy/code/next-demo/pages/index.jsx\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    _classCallCheck(this, Index);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Index).apply(this, arguments));\n  }\n\n  _createClass(Index, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          test = _this$props.test,\n          index = _this$props.index,\n          add = _this$props.add;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"/about\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Hello World \", test, \" \", index, \" \", this.props.count)), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return add(1);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"+1\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var req, index;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                req = _ref.req;\n                index = '我是index';\n                return _context.abrupt(\"return\", {\n                  index: index\n                });\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return Index;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    count: state.counter.count,\n    username: state.user.username\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    add: function add(num) {\n      return dispatch({\n        type: 'ADD',\n        num: num\n      });\n    },\n    rename: function rename(name) {\n      return dispatch({\n        type: 'UPDATE_USERNAME',\n        name: name\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/cxy/code/next-demo/pages/index.jsx"],"names":["React","Link","connect","Index","props","test","index","add","count","req","Component","mapStateToProps","state","counter","username","user","mapDispatchToProps","dispatch","num","type","rename","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;IAEMC,K;;;;;;;;;;;;;6BAMK;AAAA,wBACsB,KAAKC,KAD3B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAAA,UACcC,GADd,eACcA,GADd;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAgBF,IAAhB,OAAuBC,KAAvB,OAA+B,KAAKF,KAAL,CAAWI,KAA1C,CADF,CADF,EAIE;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMD,GAAG,CAAC,CAAD,CAAT;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF;AAQD;;;;;;;;;;;;AAf8BE,gBAAAA,G,QAAAA,G;AACvBH,gBAAAA,K,GAAQ,S;iDACP;AAAEA,kBAAAA,KAAK,EAALA;AAAF,iB;;;;;;;;;;;;;;;;;;;EAHSN,KAAK,CAACU,S;;AAmB1B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLJ,IAAAA,KAAK,EAAEI,KAAK,CAACC,OAAN,CAAcL,KADhB;AAELM,IAAAA,QAAQ,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAID,CALD;;AAOA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLV,IAAAA,GAAG,EAAE,aAACW,GAAD;AAAA,aAASD,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,KAAR;AAAeD,QAAAA,GAAG,EAAHA;AAAf,OAAD,CAAjB;AAAA,KADA;AAELE,IAAAA,MAAM,EAAE,gBAACC,IAAD;AAAA,aAAUJ,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,iBAAR;AAA2BE,QAAAA,IAAI,EAAJA;AAA3B,OAAD,CAAlB;AAAA;AAFH,GAAP;AAID,CALD;;AAOA,eAAenB,OAAO,CAACS,eAAD,EAAkBK,kBAAlB,CAAP,CAA6Cb,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { connect } from 'react-redux'\n\nclass Index extends React.Component {\n  static async getInitialProps({ req }) {\n    const index = '我是index'\n    return { index }\n  }\n\n  render() {\n    const { test, index, add } = this.props\n    return (\n      <div>\n        <Link href='/about'>\n          <a>Hello World {test} {index} {this.props.count}</a>\n        </Link>\n        <button onClick={() => add(1)}>+1</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.counter.count,\n    username: state.user.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: (num) => dispatch({ type: 'ADD', num }),\n    rename: (name) => dispatch({ type: 'UPDATE_USERNAME', name })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)"]},"metadata":{},"sourceType":"module"}