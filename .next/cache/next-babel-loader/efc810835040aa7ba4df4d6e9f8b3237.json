{"ast":null,"code":"var _jsxFileName = \"/Users/cxy/code/next-demo/pages/index.jsx\";\nimport React from 'react';\nimport Link from 'next/link';\nimport { connect } from 'react-redux';\n\nclass Index extends React.Component {\n  static async getInitialProps(ctx) {\n    console.log('ctx: app', ctx.reduxStore);\n    const index = '我是index';\n    return {\n      index\n    };\n  }\n\n  render() {\n    const {\n      test,\n      index,\n      add\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Link, {\n      href: \"/about\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Hello World \", test, \" \", index, \" \", this.props.count)), React.createElement(\"button\", {\n      onClick: () => add(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"+1\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    count: state.counter.count,\n    username: state.user.username\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: num => dispatch({\n      type: 'ADD',\n      num\n    }),\n    rename: name => dispatch({\n      type: 'UPDATE_USERNAME',\n      name\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["/Users/cxy/code/next-demo/pages/index.jsx"],"names":["React","Link","connect","Index","Component","getInitialProps","ctx","console","log","reduxStore","index","render","test","add","props","count","mapStateToProps","state","counter","username","user","mapDispatchToProps","dispatch","num","type","rename","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAClC,eAAaC,eAAb,CAA6BC,GAA7B,EAAkC;AAChCC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,GAAG,CAACG,UAA5B;AACA,UAAMC,KAAK,GAAG,SAAd;AACA,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,IAAF;AAAQF,MAAAA,KAAR;AAAeG,MAAAA;AAAf,QAAuB,KAAKC,KAAlC;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAgBF,IAAhB,OAAuBF,KAAvB,OAA+B,KAAKI,KAAL,CAAWC,KAA1C,CADF,CADF,EAIE;AAAQ,MAAA,OAAO,EAAE,MAAMF,GAAG,CAAC,CAAD,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF;AAQD;;AAjBiC;;AAoBpC,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,KAAK,EAAEE,KAAK,CAACC,OAAN,CAAcH,KADhB;AAELI,IAAAA,QAAQ,EAAEF,KAAK,CAACG,IAAN,CAAWD;AAFhB,GAAP;AAID,CALD;;AAOA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLT,IAAAA,GAAG,EAAGU,GAAD,IAASD,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,KAAR;AAAeD,MAAAA;AAAf,KAAD,CADjB;AAELE,IAAAA,MAAM,EAAGC,IAAD,IAAUJ,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE,iBAAR;AAA2BE,MAAAA;AAA3B,KAAD;AAFrB,GAAP;AAID,CALD;;AAOA,eAAexB,OAAO,CAACc,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,KAA7C,CAAf","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport { connect } from 'react-redux'\n\nclass Index extends React.Component {\n  static async getInitialProps(ctx) {\n    console.log('ctx: app', ctx.reduxStore)\n    const index = '我是index'\n    return { index }\n  }\n\n  render() {\n    const { test, index, add } = this.props\n    return (\n      <div>\n        <Link href='/about'>\n          <a>Hello World {test} {index} {this.props.count}</a>\n        </Link>\n        <button onClick={() => add(1)}>+1</button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    count: state.counter.count,\n    username: state.user.username\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: (num) => dispatch({ type: 'ADD', num }),\n    rename: (name) => dispatch({ type: 'UPDATE_USERNAME', name })\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index)"]},"metadata":{},"sourceType":"module"}