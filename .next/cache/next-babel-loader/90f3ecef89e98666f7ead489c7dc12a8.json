{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/cxy/code/next-demo/with-redux.js\";\nimport React from 'react';\nimport createStore from './store';\nconst isServer = typeof window === 'undefined';\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__';\n\nconst getOrCreateStore = initialState => {\n  if (isServer) {\n    return createStore(initialState);\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = createStore(initialState);\n  }\n\n  return window[__NEXT_REDUX_STORE__];\n};\n\nexport default (MyApp => {\n  class WithReduxApp extends React.Component {\n    static async getInitialProps(ctx) {\n      console.log('WithReduxApp getInitialProps::::');\n      const reduxStore = getOrCreateStore();\n      ctx.reduxStore = reduxStore; // 这里把reduxStore传过去给Index的getInitialProps使用，上下文还在，这是同一个reduxStore\n\n      let appProps = {};\n\n      if (typeof MyApp.getInitialProps === 'function') {\n        appProps = await MyApp.getInitialProps(ctx);\n        console.log('appProps', appProps);\n      }\n\n      return _objectSpread({}, appProps, {\n        initialReduxState: reduxStore.getState() // 脱水,在此是不能返回reduxStore，因为这里return的内容最终会被拍平，放在html的script标签内，客户端代码可以通过props获取到\n\n      });\n    }\n\n    constructor(props) {\n      console.log('WithReduxApp constructor::::initialReduxState', props.initialReduxState);\n      super(props);\n      this.reduxStore = getOrCreateStore(props.initialReduxState);\n    }\n\n    render() {\n      const _this$props = this.props,\n            {\n        Component,\n        pageProps\n      } = _this$props,\n            rest = _objectWithoutProperties(_this$props, [\"Component\", \"pageProps\"]);\n\n      return React.createElement(MyApp, _extends({\n        Component: Component,\n        pageProps: pageProps\n      }, rest, {\n        reduxStore: this.reduxStore // 注入\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return WithReduxApp;\n});","map":{"version":3,"sources":["/Users/cxy/code/next-demo/with-redux.js"],"names":["React","createStore","isServer","window","__NEXT_REDUX_STORE__","getOrCreateStore","initialState","MyApp","WithReduxApp","Component","getInitialProps","ctx","console","log","reduxStore","appProps","initialReduxState","getState","constructor","props","render","pageProps","rest"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AAGA,MAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;;AAEA,MAAMC,gBAAgB,GAAIC,YAAD,IAAkB;AACzC,MAAIJ,QAAJ,EAAc;AACZ,WAAOD,WAAW,CAACK,YAAD,CAAlB;AACD;;AAED,MAAI,CAACH,MAAM,CAACC,oBAAD,CAAX,EAAmC;AACjCD,IAAAA,MAAM,CAACC,oBAAD,CAAN,GAA+BH,WAAW,CAACK,YAAD,CAA1C;AACD;;AAED,SAAOH,MAAM,CAACC,oBAAD,CAAb;AACD,CAVD;;AAWA,gBAAeG,KAAK,IAAI;AAEtB,QAAMC,YAAN,SAA2BR,KAAK,CAACS,SAAjC,CAA2C;AACzC,iBAAaC,eAAb,CAA8BC,GAA9B,EAAmC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACA,YAAMC,UAAU,GAAGT,gBAAgB,EAAnC;AACAM,MAAAA,GAAG,CAACG,UAAJ,GAAiBA,UAAjB,CAHiC,CAGL;;AAC5B,UAAIC,QAAQ,GAAG,EAAf;;AACA,UAAI,OAAOR,KAAK,CAACG,eAAb,KAAiC,UAArC,EAAiD;AAC/CK,QAAAA,QAAQ,GAAG,MAAMR,KAAK,CAACG,eAAN,CAAsBC,GAAtB,CAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,QAAxB;AACD;;AAED,+BACKA,QADL;AAEEC,QAAAA,iBAAiB,EAAEF,UAAU,CAACG,QAAX,EAFrB,CAE2C;;AAF3C;AAID;;AAEDC,IAAAA,WAAW,CAAEC,KAAF,EAAS;AAClBP,MAAAA,OAAO,CAACC,GAAR,CAAY,+CAAZ,EAA6DM,KAAK,CAACH,iBAAnE;AACA,YAAMG,KAAN;AACA,WAAKL,UAAL,GAAkBT,gBAAgB,CAACc,KAAK,CAACH,iBAAP,CAAlC;AACD;;AAEDI,IAAAA,MAAM,GAAI;AACR,0BAA0C,KAAKD,KAA/C;AAAA,YAAM;AAAEV,QAAAA,SAAF;AAAaY,QAAAA;AAAb,OAAN;AAAA,YAAiCC,IAAjC;;AAEA,aAAO,oBAAC,KAAD;AACL,QAAA,SAAS,EAAEb,SADN;AAEL,QAAA,SAAS,EAAEY;AAFN,SAGDC,IAHC;AAIL,QAAA,UAAU,EAAE,KAAKR,UAJZ,CAIwB;AAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AAMD;;AAhCwC;;AAmC3C,SAAON,YAAP;AACD,CAtCD","sourcesContent":["import React from 'react'\nimport createStore from './store'\n\n\nconst isServer = typeof window === 'undefined'\nconst __NEXT_REDUX_STORE__ = '__NEXT_REDUX_STORE__'\n\nconst getOrCreateStore = (initialState) => {\n  if (isServer) {\n    return createStore(initialState)\n  }\n\n  if (!window[__NEXT_REDUX_STORE__]) {\n    window[__NEXT_REDUX_STORE__] = createStore(initialState)\n  }\n\n  return window[__NEXT_REDUX_STORE__]\n}\nexport default MyApp => {\n\n  class WithReduxApp extends React.Component {\n    static async getInitialProps (ctx) {\n      console.log('WithReduxApp getInitialProps::::')\n      const reduxStore = getOrCreateStore()\n      ctx.reduxStore = reduxStore // 这里把reduxStore传过去给Index的getInitialProps使用，上下文还在，这是同一个reduxStore\n      let appProps = {}\n      if (typeof MyApp.getInitialProps === 'function') {\n        appProps = await MyApp.getInitialProps(ctx)\n        console.log('appProps', appProps)\n      }\n  \n      return {\n        ...appProps,\n        initialReduxState: reduxStore.getState() // 脱水,在此是不能返回reduxStore，因为这里return的内容最终会被拍平，放在html的script标签内，客户端代码可以通过props获取到\n      }\n    }\n    \n    constructor (props) {\n      console.log('WithReduxApp constructor::::initialReduxState', props.initialReduxState)\n      super(props)\n      this.reduxStore = getOrCreateStore(props.initialReduxState)\n    }\n\n    render () {\n      const { Component, pageProps, ...rest } = this.props\n  \n      return <MyApp\n        Component={Component}\n        pageProps={pageProps}\n        {...rest}\n        reduxStore={this.reduxStore} // 注入\n      />\n    }\n  }\n\n  return WithReduxApp\n}"]},"metadata":{},"sourceType":"module"}