{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst initailState = {\n  count: 0\n};\nconst userInitailState = {\n  username: 'Nick'\n};\n\nfunction countReducer(state = initailState, action) {\n  switch (action.type) {\n    case 'ADD':\n      return _objectSpread({}, state, {\n        count: state.count + action.num\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction userReducer(state = userInitailState, action) {\n  switch (action.type) {\n    case 'UPDATE_USERNAME':\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nconst allReducer = combineReducers({\n  counter: countReducer,\n  user: userReducer\n}); // 监听store状态变化的方法\n// store.subscribe(() => {\n//   console.log('changed', store.getState())\n// })\n\nfunction add(num) {\n  return {\n    type: 'ADD',\n    num\n  };\n}\n\nfunction asyncAdd(num) {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(add(num));\n    }, 2000);\n  };\n}\n\nexport default function initializeStore(state) {\n  const store = createStore(allReducer, _Object$assign({}, {\n    counter: initailState,\n    user: userInitailState\n  }, state), composeWithDevTools(applyMiddleware(thunk)));\n  return store;\n}","map":{"version":3,"sources":["/Users/cxy/code/next-demo/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","initailState","count","userInitailState","username","countReducer","state","action","type","num","userReducer","name","allReducer","counter","user","add","asyncAdd","dispatch","setTimeout","initializeStore","store"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAArB;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,QAAQ,EAAE;AADa,CAAzB;;AAIA,SAASC,YAAT,CAAuBC,KAAK,GAAGL,YAA/B,EAA6CM,MAA7C,EAAqD;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,+BACKF,KADL;AAEEJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE;AAF9B;;AAIF;AACE,aAAOH,KAAP;AAPJ;AASD;;AAED,SAASI,WAAT,CAAsBJ,KAAK,GAAGH,gBAA9B,EAAgDI,MAAhD,EAAwD;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BACKF,KADL;AAEEF,QAAAA,QAAQ,EAAEG,MAAM,CAACI;AAFnB;;AAIF;AACE,aAAOL,KAAP;AAPJ;AASD;;AAED,MAAMM,UAAU,GAAGf,eAAe,CAAC;AACjCgB,EAAAA,OAAO,EAAER,YADwB;AAEjCS,EAAAA,IAAI,EAAEJ;AAF2B,CAAD,CAAlC,C,CAKA;AACA;AACA;AACA;;AAEA,SAASK,GAAT,CAAcN,GAAd,EAAmB;AACjB,SAAO;AACLD,IAAAA,IAAI,EAAE,KADD;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,SAASO,QAAT,CAAmBP,GAAnB,EAAwB;AACtB,SAAQQ,QAAD,IAAc;AACnBC,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACF,GAAG,CAACN,GAAD,CAAJ,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAJD;AAKD;;AAED,eAAe,SAASU,eAAT,CAA0Bb,KAA1B,EAAiC;AAC9C,QAAMc,KAAK,GAAGxB,WAAW,CAACgB,UAAD,EAAa,eAAc,EAAd,EAAkB;AAAEC,IAAAA,OAAO,EAAEZ,YAAX;AAAyBa,IAAAA,IAAI,EAAEX;AAA/B,GAAlB,EAAqEG,KAArE,CAAb,EAA0FN,mBAAmB,CAACF,eAAe,CAACC,KAAD,CAAhB,CAA7G,CAAzB;AACA,SAAOqB,KAAP;AACD","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension' \n\nconst initailState = {\n  count: 0\n}\n\nconst userInitailState = {\n  username: 'Nick'\n}\n\nfunction countReducer (state = initailState, action) {\n  switch (action.type) {\n    case 'ADD':\n      return {\n        ...state,\n        count: state.count + action.num\n      }\n    default:\n      return state\n  }\n}\n\nfunction userReducer (state = userInitailState, action) {\n  switch (action.type) {\n    case 'UPDATE_USERNAME':\n      return {\n        ...state,\n        username: action.name\n      }\n    default:\n      return state\n  }\n}\n\nconst allReducer = combineReducers({\n  counter: countReducer,\n  user: userReducer\n})\n\n// 监听store状态变化的方法\n// store.subscribe(() => {\n//   console.log('changed', store.getState())\n// })\n\nfunction add (num) {\n  return {\n    type: 'ADD',\n    num\n  }\n}\n\nfunction asyncAdd (num) {\n  return (dispatch) => {\n    setTimeout(() => {\n      dispatch(add(num))\n    }, 2000)\n  }\n}\n\nexport default function initializeStore (state) {\n  const store = createStore(allReducer, Object.assign({}, { counter: initailState, user: userInitailState }, state), composeWithDevTools(applyMiddleware(thunk)))\n  return store\n}"]},"metadata":{},"sourceType":"module"}